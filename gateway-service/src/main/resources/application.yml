spring:
  application:
    name: gateway-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
          jwk-set-url: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-ControlAllow-Origin, RETAIN_LAST
        - AddResponseHeader=Access-Control-Allow-Origin, *
      routes:
        - id: auth
          uri: ${keycloak.auth-server-url}
          predicates:
            - Path=/openid-connect/**
          filters:
            - RewritePath=/openid-connect, /realms/${keycloak.realm}/protocol/openid-connect

#        - id: external-auth
#            uri: ${keycloak.external.auth-server-url}
#            predicates:
#              - Path=/api/external/openid-connect/**
#            filters:
#              - RewritePath=/api/external/openid-connect, /realms/${keycloak.external.realm}/protocol/openid-connect


server:
  port: 8081

eureka:
  server: 8761
  client:
    service-url:
      defaultZone: http://localhost:${eureka.server}/eureka
  instance:
    prefer-ip-address: true


keycloak:
  auth-server-url: ${KEYCLOAK_URL:http://localhost:8080}
  realm: ${KEYCLOAK_REALM:myrealm}
  client: ${KEYCLOAK_CLIENT_ID}
  username: ${KEYCLOAK_ADMIN_USERNAME:admin}
  password: ${KEYCLOAK_ADMIN_PASSWORD:qwe123}
  auth-path: /realms/autobahn/protocol/openid-connect/token
  external:
    auth-server-url: ${keycloak.auth-server-url}
    realm: external
